-- Copyright 2023 Google LLC
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

DECLARE max_date DATE;
DECLARE min_date DATE;
SET max_date = (SELECT DATE_SUB(MAX(event_date), INTERVAL 1 DAY) FROM `{{mds_project_id}}.{{mds_dataset}}.event`); 
SET min_date = (SELECT DATE_ADD(MIN(event_date), INTERVAL 15 DAY) FROM `{{mds_project_id}}.{{mds_dataset}}.event`); 

CREATE TEMP TABLE training_preparation as (
  SELECT DISTINCT
  UD.user_pseudo_id,
    MAX(UD.user_id) OVER(user_segmentation_dimensions_window) AS user_id,
    UD.feature_date,
    MAX(UD.month_of_the_year) OVER(user_segmentation_dimensions_window) AS month_of_the_year,
    MAX(UD.week_of_the_year) OVER(user_segmentation_dimensions_window) AS week_of_the_year,
    MAX(UD.day_of_the_month) OVER(user_segmentation_dimensions_window) AS day_of_the_month,
    MAX(UD.day_of_week) OVER(user_segmentation_dimensions_window) AS day_of_week,
    MAX(UD.device_category) OVER(user_segmentation_dimensions_window) AS device_category,
    MAX(UD.device_mobile_brand_name) OVER(user_segmentation_dimensions_window) AS device_mobile_brand_name,
    MAX(UD.device_mobile_model_name) OVER(user_segmentation_dimensions_window) AS device_mobile_model_name,
    MAX(UD.device_os) OVER(user_segmentation_dimensions_window) AS device_os,
    MAX(UD.device_os_version) OVER(user_segmentation_dimensions_window) AS device_os_version,
    MAX(UD.device_language) OVER(user_segmentation_dimensions_window) AS device_language,
    MAX(UD.device_web_browser) OVER(user_segmentation_dimensions_window) AS device_web_browser,
    MAX(UD.device_web_browser_version) OVER(user_segmentation_dimensions_window) AS device_web_browser_version,
    MAX(UD.geo_sub_continent) OVER(user_segmentation_dimensions_window) AS geo_sub_continent,
    MAX(UD.geo_country) OVER(user_segmentation_dimensions_window) AS geo_country,
    MAX(UD.geo_region) OVER(user_segmentation_dimensions_window) AS geo_region,
    MAX(UD.geo_city) OVER(user_segmentation_dimensions_window) AS geo_city,
    MAX(UD.geo_metro) OVER(user_segmentation_dimensions_window) AS geo_metro,
    MAX(UD.last_traffic_source_medium) OVER(user_segmentation_dimensions_window) AS last_traffic_source_medium,
    MAX(UD.last_traffic_source_name) OVER(user_segmentation_dimensions_window) AS last_traffic_source_name,
    MAX(UD.last_traffic_source_source) OVER(user_segmentation_dimensions_window) AS last_traffic_source_source,
    MAX(UD.first_traffic_source_medium) OVER(user_segmentation_dimensions_window) AS first_traffic_source_medium,
    MAX(UD.first_traffic_source_name) OVER(user_segmentation_dimensions_window) AS first_traffic_source_name,
    MAX(UD.first_traffic_source_source) OVER(user_segmentation_dimensions_window) AS first_traffic_source_source,
    MAX(UD.has_signed_in_with_user_id) OVER(user_segmentation_dimensions_window) AS has_signed_in_with_user_id,
    MAX(UWM.active_users_past_1_7_day) OVER(user_lookback_metrics_window) AS active_users_past_1_7_day,
    MAX(UWM.active_users_past_8_14_day) OVER(user_lookback_metrics_window) AS active_users_past_8_14_day,
    MAX(UWM.purchases_past_1_7_day) OVER(user_lookback_metrics_window) AS purchases_past_1_7_day,
    MAX(UWM.purchases_past_8_14_day) OVER(user_lookback_metrics_window) AS purchases_past_8_14_day,
    MAX(UWM.visits_past_1_7_day) OVER(user_lookback_metrics_window) AS visits_past_1_7_day,
    MAX(UWM.visits_past_8_14_day) OVER(user_lookback_metrics_window) AS visits_past_8_14_day,
    MAX(UWM.view_items_past_1_7_day) OVER(user_lookback_metrics_window) AS view_items_past_1_7_day,
    MAX(UWM.view_items_past_8_14_day) OVER(user_lookback_metrics_window) AS view_items_past_8_14_day,
    MAX(UWM.add_to_carts_past_1_7_day) OVER(user_lookback_metrics_window) AS add_to_carts_past_1_7_day,
    MAX(UWM.add_to_carts_past_8_14_day) OVER(user_lookback_metrics_window) AS add_to_carts_past_8_14_day,
    MAX(UWM.checkouts_past_1_7_day) OVER(user_lookback_metrics_window) AS checkouts_past_1_7_day,
    MAX(UWM.checkouts_past_8_14_day) OVER(user_lookback_metrics_window) AS checkouts_past_8_14_day,
    MAX(UWM.ltv_revenue_past_1_7_day) OVER(user_lookback_metrics_window) AS ltv_revenue_past_1_7_day,
    MAX(UWM.ltv_revenue_past_7_15_day) OVER(user_lookback_metrics_window) AS ltv_revenue_past_7_15_day,
    MAX(UM.purchasers_users) OVER(user_scoped_segmentation_metrics_window) AS purchasers_users,
    MAX(UM.average_daily_purchasers) OVER(user_scoped_segmentation_metrics_window) AS average_daily_purchasers,
    MAX(UM.active_users) OVER(user_scoped_segmentation_metrics_window) AS active_users,
    MAX(UM.DAU) OVER(user_scoped_segmentation_metrics_window) AS DAU,
    MAX(UM.MAU) OVER(user_scoped_segmentation_metrics_window) AS MAU,
    MAX(UM.WAU) OVER(user_scoped_segmentation_metrics_window) AS WAU,
    MAX(UM.dau_per_mau) OVER(user_scoped_segmentation_metrics_window) AS dau_per_mau,
    MAX(UM.dau_per_wau) OVER(user_scoped_segmentation_metrics_window) AS dau_per_wau,
    MAX(UM.wau_per_mau) OVER(user_scoped_segmentation_metrics_window) AS wau_per_mau,
    MAX(UM.users_engagement_duration_seconds) OVER(user_scoped_segmentation_metrics_window) AS users_engagement_duration_seconds,
    MAX(UM.average_engagement_time) OVER(user_scoped_segmentation_metrics_window) AS average_engagement_time,
    MAX(UM.average_engagement_time_per_session) OVER(user_scoped_segmentation_metrics_window) AS average_engagement_time_per_session,
    MAX(UM.average_sessions_per_user) OVER(user_scoped_segmentation_metrics_window) AS average_sessions_per_user,
    MAX(UM.ARPPU) OVER(user_scoped_segmentation_metrics_window) AS ARPPU,
    MAX(UM.ARPU) OVER(user_scoped_segmentation_metrics_window) AS ARPU,
    MAX(UM.average_daily_revenue) OVER(user_scoped_segmentation_metrics_window) AS average_daily_revenue,
    MAX(UM.max_daily_revenue) OVER(user_scoped_segmentation_metrics_window) AS max_daily_revenue,
    MAX(UM.min_daily_revenue) OVER(user_scoped_segmentation_metrics_window) AS min_daily_revenue,
    MAX(UM.new_users) OVER(user_scoped_segmentation_metrics_window) AS new_users,
    MAX(UM.returning_users) OVER(user_scoped_segmentation_metrics_window) AS returning_users,
    MAX(UM.first_time_purchasers) OVER(user_scoped_segmentation_metrics_window) AS first_time_purchasers,
    MAX(UM.first_time_purchaser_conversion) OVER(user_scoped_segmentation_metrics_window) AS first_time_purchaser_conversion,
    MAX(UM.first_time_purchasers_per_new_user) OVER(user_scoped_segmentation_metrics_window) AS first_time_purchasers_per_new_user,
    MAX(UM.avg_user_conversion_rate) OVER(user_scoped_segmentation_metrics_window) AS avg_user_conversion_rate,
    MAX(UM.avg_session_conversion_rate) OVER(user_scoped_segmentation_metrics_window) AS avg_session_conversion_rate
FROM
  `{{feature_store_project_id}}.{{feature_store_dataset}}.user_segmentation_dimensions` UD
INNER JOIN
  `{{feature_store_project_id}}.{{feature_store_dataset}}.user_lookback_metrics` UWM
ON
  UWM.user_pseudo_id = UD.user_pseudo_id
  AND UWM.feature_date = UD.feature_date
INNER JOIN
  `{{feature_store_project_id}}.{{feature_store_dataset}}.user_scoped_segmentation_metrics` UM
ON
  UM.feature_date = UD.feature_date
WHERE
  -- Define the training+validation subset interval
  UD.feature_date BETWEEN GREATEST(start_date, min_date) AND LEAST(end_date, max_date)
WINDOW 
  user_segmentation_dimensions_window AS (PARTITION BY UD.user_pseudo_id, UD.feature_date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),
  user_lookback_metrics_window AS (PARTITION BY UWM.user_pseudo_id, UWM.feature_date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),
  user_scoped_segmentation_metrics_window AS (PARTITION BY UM.feature_date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)
);


CREATE TEMP TABLE DataForTargetTable AS(
  SELECT DISTINCT
  CASE 
    WHEN (ABS(MOD(FARM_FINGERPRINT(user_pseudo_id), 10)) BETWEEN 0 AND train_split_end_number) THEN "TRAIN" 
    WHEN (ABS(MOD(FARM_FINGERPRINT(user_pseudo_id), 10)) BETWEEN train_split_end_number AND validation_split_end_number) THEN "VALIDATE" 
    WHEN (ABS(MOD(FARM_FINGERPRINT(user_pseudo_id), 10)) BETWEEN validation_split_end_number AND 9) THEN "TEST"
  END as data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  day_of_the_month,
  day_of_week,
  device_category,
  device_mobile_model_name,
  device_os_version,
  geo_country,
  geo_region,
  geo_city,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  active_users_past_1_7_day,
  active_users_past_8_14_day,
  purchases_past_1_7_day,
  purchases_past_8_14_day,
  visits_past_1_7_day,
  visits_past_8_14_day,
  view_items_past_1_7_day,
  view_items_past_8_14_day,
  add_to_carts_past_1_7_day,
  add_to_carts_past_8_14_day,
  checkouts_past_1_7_day,
  checkouts_past_8_14_day,
  ltv_revenue_past_1_7_day,
  ltv_revenue_past_7_15_day
  FROM training_preparation);

CREATE OR REPLACE TABLE `{{project_id}}.{{dataset}}.audience_segmentation_training_full_dataset` AS
SELECT DISTINCT * FROM DataForTargetTable
WHERE data_split IS NOT NULL;

CREATE OR REPLACE TABLE `{{project_id}}.{{dataset}}.audience_segmentation_training_15` AS(
  SELECT 
  CURRENT_TIMESTAMP() AS processed_timestamp,
  data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  day_of_the_month,
  day_of_week,
  device_category,
  device_mobile_model_name,
  device_os_version,
  geo_country,
  geo_region,
  geo_city,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  active_users_past_1_7_day,
  active_users_past_8_14_day,
  purchases_past_1_7_day,
  purchases_past_8_14_day,
  visits_past_1_7_day,
  visits_past_8_14_day,
  view_items_past_1_7_day,
  view_items_past_8_14_day,
  add_to_carts_past_1_7_day,
  add_to_carts_past_8_14_day,
  checkouts_past_1_7_day,
  checkouts_past_8_14_day,
  ltv_revenue_past_1_7_day,
  ltv_revenue_past_7_15_day
  FROM `{{project_id}}.{{dataset}}.audience_segmentation_training_full_dataset`
);

CREATE OR REPLACE VIEW `{{project_id}}.{{dataset}}.v_audience_segmentation_training_15`
(processed_timestamp,
  data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  day_of_the_month,
  day_of_week,
  device_category,
  device_mobile_model_name,
  device_os_version,
  geo_country,
  geo_region,
  geo_city,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  active_users_past_1_7_day,
  active_users_past_8_14_day,
  purchases_past_1_7_day,
  purchases_past_8_14_day,
  visits_past_1_7_day,
  visits_past_8_14_day,
  view_items_past_1_7_day,
  view_items_past_8_14_day,
  add_to_carts_past_1_7_day,
  add_to_carts_past_8_14_day,
  checkouts_past_1_7_day,
  checkouts_past_8_14_day,
  ltv_revenue_past_1_7_day,
  ltv_revenue_past_7_15_day)
OPTIONS(
  --expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL {{expiration_duration_hours}} HOUR),
  friendly_name="v_audience_segmentation_training_15",
  description="View Purchase Propensity Training dataset using 15 days back to predict 15 days ahead. View expires after 48h and should run daily.",
  labels=[("org_unit", "development")]
) AS 

SELECT
  processed_timestamp,
  data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  day_of_the_month,
  day_of_week,
  device_category,
  device_mobile_model_name,
  device_os_version,
  geo_country,
  geo_region,
  geo_city,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  active_users_past_1_7_day,
  active_users_past_8_14_day,
  purchases_past_1_7_day,
  purchases_past_8_14_day,
  visits_past_1_7_day,
  visits_past_8_14_day,
  view_items_past_1_7_day,
  view_items_past_8_14_day,
  add_to_carts_past_1_7_day,
  add_to_carts_past_8_14_day,
  checkouts_past_1_7_day,
  checkouts_past_8_14_day,
  ltv_revenue_past_1_7_day,
  ltv_revenue_past_7_15_day
FROM (
  SELECT DISTINCT
  processed_timestamp,
  data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  day_of_the_month,
  day_of_week,
  device_category,
  device_mobile_model_name,
  device_os_version,
  geo_country,
  geo_region,
  geo_city,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  active_users_past_1_7_day,
  active_users_past_8_14_day,
  purchases_past_1_7_day,
  purchases_past_8_14_day,
  visits_past_1_7_day,
  visits_past_8_14_day,
  view_items_past_1_7_day,
  view_items_past_8_14_day,
  add_to_carts_past_1_7_day,
  add_to_carts_past_8_14_day,
  checkouts_past_1_7_day,
  checkouts_past_8_14_day,
  ltv_revenue_past_1_7_day,
  ltv_revenue_past_7_15_day,
    ROW_NUMBER() OVER (PARTITION BY data_split ORDER BY RAND()) AS rn
  FROM
    `{{project_id}}.{{dataset}}.audience_segmentation_training_15` )
WHERE
  rn <= {{samples_per_split}};

#SELECT DISTINCT *
#  FROM `{{project_id}}.{{dataset}}.audience_segmentation_training_15`;

DROP TABLE training_preparation;
DROP TABLE DataForTargetTable;