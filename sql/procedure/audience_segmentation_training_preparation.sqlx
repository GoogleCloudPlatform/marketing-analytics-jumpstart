-- Copyright 2023 Google LLC
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- The procedure audience_segmentation_training_preparation prepares data for training the Audience Segmentation model.
DECLARE custom_start_date DATE DEFAULT NULL;
DECLARE custom_end_date DATE DEFAULT NULL;
DECLARE max_date DATE;
DECLARE min_date DATE;

-- custom_start_date: The start date of the data to be used for training.
-- custom_end_date: The end date of the data to be used for training.
SET custom_start_date = PARSE_DATE("%Y-%m-%d", {{custom_start_date}});
SET custom_end_date = PARSE_DATE("%Y-%m-%d", {{custom_end_date}});

-- max_date: The maximum date of the data that is available for training.
-- min_date: The minimum date of the data that is available for training.
SET max_date = (SELECT DATE_SUB(MAX(event_date), INTERVAL 1 DAY) FROM `{{mds_project_id}}.{{mds_dataset}}.event`); 
SET min_date = (SELECT DATE_ADD(MIN(event_date), INTERVAL 15 DAY) FROM `{{mds_project_id}}.{{mds_dataset}}.event`); 

-- The procedure first checks if the custom_start_date and custom_end_date parameters are valid. 
-- If either parameter is not valid, the procedure sets the corresponding date to the maximum or
-- minimum date of the available data.
IF (custom_start_date IS NOT NULL OR custom_start_date >= min_date OR custom_start_date <= max_date) 
   AND custom_start_date < custom_end_date THEN
  SET min_date = custom_start_date;
END IF;

IF (custom_end_date IS NOT NULL OR custom_end_date <= max_date OR custom_end_date >= min_date) 
   AND custom_end_date > custom_start_date THEN
  SET max_date = custom_end_date;
END IF;


-- Prepare Training Data:
--    Create temporary tables training_preparation_ud and training_preparation_uwm to store 
--        user segmentation dimensions and user lookback metrics data, respectively.
--    Filter the data based on the custom_start_date and custom_end_date parameters.
--    Use window functions to aggregate features over the past 15 days for each user.
CREATE OR REPLACE TEMP TABLE training_preparation_ud as (
  SELECT DISTINCT
    UD.user_pseudo_id,
    MAX(UD.user_id) OVER(user_segmentation_dimensions_window) AS user_id,
    UD.feature_date,
    MAX(UD.device_category) OVER(user_segmentation_dimensions_window) AS device_category,
    MAX(UD.device_mobile_brand_name) OVER(user_segmentation_dimensions_window) AS device_mobile_brand_name,
    MAX(UD.device_mobile_model_name) OVER(user_segmentation_dimensions_window) AS device_mobile_model_name,
    MAX(UD.device_os) OVER(user_segmentation_dimensions_window) AS device_os,
    MAX(UD.device_os_version) OVER(user_segmentation_dimensions_window) AS device_os_version,
    MAX(UD.device_language) OVER(user_segmentation_dimensions_window) AS device_language,
    MAX(UD.device_web_browser) OVER(user_segmentation_dimensions_window) AS device_web_browser,
    MAX(UD.device_web_browser_version) OVER(user_segmentation_dimensions_window) AS device_web_browser_version,
    MAX(UD.geo_sub_continent) OVER(user_segmentation_dimensions_window) AS geo_sub_continent,
    MAX(UD.geo_country) OVER(user_segmentation_dimensions_window) AS geo_country,
    MAX(UD.geo_region) OVER(user_segmentation_dimensions_window) AS geo_region,
    MAX(UD.geo_city) OVER(user_segmentation_dimensions_window) AS geo_city,
    MAX(UD.geo_metro) OVER(user_segmentation_dimensions_window) AS geo_metro,
    MAX(UD.last_traffic_source_medium) OVER(user_segmentation_dimensions_window) AS last_traffic_source_medium,
    MAX(UD.last_traffic_source_name) OVER(user_segmentation_dimensions_window) AS last_traffic_source_name,
    MAX(UD.last_traffic_source_source) OVER(user_segmentation_dimensions_window) AS last_traffic_source_source,
    MAX(UD.first_traffic_source_medium) OVER(user_segmentation_dimensions_window) AS first_traffic_source_medium,
    MAX(UD.first_traffic_source_name) OVER(user_segmentation_dimensions_window) AS first_traffic_source_name,
    MAX(UD.first_traffic_source_source) OVER(user_segmentation_dimensions_window) AS first_traffic_source_source,
    MAX(UD.has_signed_in_with_user_id) OVER(user_segmentation_dimensions_window) AS has_signed_in_with_user_id
FROM
  `{{feature_store_project_id}}.{{feature_store_dataset}}.user_segmentation_dimensions` UD
WHERE
  -- Define the training+validation subset interval
  UD.feature_date BETWEEN GREATEST(start_date, min_date) AND LEAST(end_date, max_date)
WINDOW 
  user_segmentation_dimensions_window AS (PARTITION BY UD.user_pseudo_id, UD.feature_date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)
);


CREATE OR REPLACE TEMP TABLE training_preparation_uwm as (
  SELECT DISTINCT
    UWM.user_pseudo_id,
    UWM.feature_date,
    MAX(UWM.active_users_past_1_7_day) OVER(user_lookback_metrics_window) AS active_users_past_1_7_day,
    MAX(UWM.active_users_past_8_14_day) OVER(user_lookback_metrics_window) AS active_users_past_8_14_day,
    MAX(UWM.purchases_past_1_7_day) OVER(user_lookback_metrics_window) AS purchases_past_1_7_day,
    MAX(UWM.purchases_past_8_14_day) OVER(user_lookback_metrics_window) AS purchases_past_8_14_day,
    MAX(UWM.visits_past_1_7_day) OVER(user_lookback_metrics_window) AS visits_past_1_7_day,
    MAX(UWM.visits_past_8_14_day) OVER(user_lookback_metrics_window) AS visits_past_8_14_day,
    MAX(UWM.view_items_past_1_7_day) OVER(user_lookback_metrics_window) AS view_items_past_1_7_day,
    MAX(UWM.view_items_past_8_14_day) OVER(user_lookback_metrics_window) AS view_items_past_8_14_day,
    MAX(UWM.add_to_carts_past_1_7_day) OVER(user_lookback_metrics_window) AS add_to_carts_past_1_7_day,
    MAX(UWM.add_to_carts_past_8_14_day) OVER(user_lookback_metrics_window) AS add_to_carts_past_8_14_day,
    MAX(UWM.checkouts_past_1_7_day) OVER(user_lookback_metrics_window) AS checkouts_past_1_7_day,
    MAX(UWM.checkouts_past_8_14_day) OVER(user_lookback_metrics_window) AS checkouts_past_8_14_day,
    MAX(UWM.ltv_revenue_past_1_7_day) OVER(user_lookback_metrics_window) AS ltv_revenue_past_1_7_day,
    MAX(UWM.ltv_revenue_past_7_15_day) OVER(user_lookback_metrics_window) AS ltv_revenue_past_7_15_day
FROM
  `{{feature_store_project_id}}.{{feature_store_dataset}}.user_lookback_metrics` UWM
WHERE
  -- Define the training+validation subset interval
  UWM.feature_date BETWEEN GREATEST(start_date, min_date) AND LEAST(end_date, max_date)
WINDOW 
  user_lookback_metrics_window AS (PARTITION BY UWM.user_pseudo_id, UWM.feature_date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)
);


-- Create a temporary table training_preparation by joining the 
-- training_preparation_ud and training_preparation_uwm tables.
CREATE OR REPLACE TEMP TABLE training_preparation as (
  SELECT DISTINCT
    UD.user_pseudo_id,
    UD.user_id,
    UD.feature_date,
    UD.device_category,
    UD.device_mobile_brand_name,
    UD.device_mobile_model_name,
    UD.device_os,
    UD.device_os_version,
    UD.device_language,
    UD.device_web_browser,
    UD.device_web_browser_version,
    UD.geo_sub_continent,
    UD.geo_country,
    UD.geo_region,
    UD.geo_city,
    UD.geo_metro,
    UD.last_traffic_source_medium,
    UD.last_traffic_source_name,
    UD.last_traffic_source_source,
    UD.first_traffic_source_medium,
    UD.first_traffic_source_name,
    UD.first_traffic_source_source,
    UD.has_signed_in_with_user_id,
    UWM.active_users_past_1_7_day,
    UWM.active_users_past_8_14_day,
    UWM.purchases_past_1_7_day,
    UWM.purchases_past_8_14_day,
    UWM.visits_past_1_7_day,
    UWM.visits_past_8_14_day,
    UWM.view_items_past_1_7_day,
    UWM.view_items_past_8_14_day,
    UWM.add_to_carts_past_1_7_day,
    UWM.add_to_carts_past_8_14_day,
    UWM.checkouts_past_1_7_day,
    UWM.checkouts_past_8_14_day,
    UWM.ltv_revenue_past_1_7_day,
    UWM.ltv_revenue_past_7_15_day
FROM
  training_preparation_ud UD
INNER JOIN
  training_preparation_uwm UWM
ON
  UWM.user_pseudo_id = UD.user_pseudo_id
  AND UWM.feature_date = UD.feature_date
);


-- Create a temporary table DataForTargetTable that assigns a data split (TRAIN, VALIDATE, TEST) to each user based on their user_pseudo_id fingerprint.
CREATE OR REPLACE TEMP TABLE DataForTargetTable AS(
  SELECT DISTINCT
  CASE 
    WHEN (ABS(MOD(FARM_FINGERPRINT(user_pseudo_id), 10)) BETWEEN 0 AND train_split_end_number) THEN "TRAIN" 
    WHEN (ABS(MOD(FARM_FINGERPRINT(user_pseudo_id), 10)) BETWEEN train_split_end_number AND validation_split_end_number) THEN "VALIDATE" 
    WHEN (ABS(MOD(FARM_FINGERPRINT(user_pseudo_id), 10)) BETWEEN validation_split_end_number AND 9) THEN "TEST"
  END as data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_model_name,
  device_os_version,
  geo_country,
  geo_region,
  geo_city,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  active_users_past_1_7_day,
  active_users_past_8_14_day,
  purchases_past_1_7_day,
  purchases_past_8_14_day,
  visits_past_1_7_day,
  visits_past_8_14_day,
  view_items_past_1_7_day,
  view_items_past_8_14_day,
  add_to_carts_past_1_7_day,
  add_to_carts_past_8_14_day,
  checkouts_past_1_7_day,
  checkouts_past_8_14_day,
  ltv_revenue_past_1_7_day,
  ltv_revenue_past_7_15_day
  FROM training_preparation);

-- Create the final training table audience_segmentation_training_full_dataset by selecting all data from DataForTargetTable.
-- This table schema defines the following columns:
--    data_split: The data split (TRAIN, VALIDATE, TEST) to which the user belongs.
--    feature_date: The date for which the features are extracted.
--    user_pseudo_id: The unique identifier for the user.
--    user_id: The user ID.
--    device_category: The category of the device used by the user.
--    device_mobile_model_name: The model name of the mobile device used by the user.
--    device_os_version: The operating system version of the device used by the user.
--    geo_country: The country of the user's location.
--    geo_region: The region of the user's location.
--    geo_city: The city of the user's location.
--    last_traffic_source_medium: The medium used to reach the user's last session.
--    last_traffic_source_name: The name of the traffic source used to reach the user's last session.
--    last_traffic_source_source: The source of the last traffic source used by the user.
--    first_traffic_source_medium: The medium of the first traffic source used by the user.
--    first_traffic_source_name: The name of the first traffic source used by the user.
--    first_traffic_source_source: The source of the first traffic source used by the user.
--    active_users_past_1_7_day: The number of times the user has been active in the past 7 days for each user.
--    active_users_past_8_14_day: The number of times the user has been active in the past 8-14 days for each user.
--    purchases_past_1_7_day: The number of purchases in the past 7 days for each user.
--    purchases_past_8_14_day: The number of purchases in the past 8-14 days for each user.
--    visits_past_1_7_day: The number of visits in the past 7 days for each user.
--    visits_past_8_14_day: The number of visits in the past 8-14 days for each user.
--    view_items_past_1_7_day: The number of items viewed in the past 7 days for each user.
--    view_items_past_8_14_day: The number of items viewed in the past 8-14 days for each user.
--    add_to_carts_past_1_7_day: The number of items added to carts in the past 7 days for each user.
--    add_to_carts_past_8_14_day: The number of items added to carts in the past 8-14 days for each user.
--    checkouts_past_1_7_day: The number of checkouts in the past 7 days for each user.
--    checkouts_past_8_14_day: The number of checkouts in the past 8-14 days for each user.
--    ltv_revenue_past_1_7_day: The lifetime value revenue gain in the past 7 days for each user.
--    ltv_revenue_past_7_15_day: The lifetime value revenue gain in the past 7-15 days for each user.
CREATE OR REPLACE TABLE `{{project_id}}.{{dataset}}.audience_segmentation_training_full_dataset` AS
SELECT DISTINCT * FROM DataForTargetTable
WHERE data_split IS NOT NULL;

-- Create the final training table audience_segmentation_training_full_dataset by selecting all data from DataForTargetTable.
CREATE OR REPLACE TABLE `{{project_id}}.{{dataset}}.audience_segmentation_training_15` AS(
  SELECT DISTINCT
  CURRENT_TIMESTAMP() AS processed_timestamp,
  data_split,
  feature_date,
  user_pseudo_id,
  LAST_VALUE(user_id) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS user_id,
  LAST_VALUE(device_category) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS device_category,
  LAST_VALUE(device_mobile_model_name) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS device_mobile_model_name,
  LAST_VALUE(device_os_version) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS device_os_version,
  LAST_VALUE(geo_country) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS geo_country,
  LAST_VALUE(geo_region) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS geo_region,
  LAST_VALUE(geo_city) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS geo_city,
  LAST_VALUE(last_traffic_source_medium) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS last_traffic_source_medium,
  LAST_VALUE(last_traffic_source_name) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS last_traffic_source_name,
  LAST_VALUE(last_traffic_source_source) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS last_traffic_source_source,
  LAST_VALUE(first_traffic_source_medium) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS first_traffic_source_medium,
  LAST_VALUE(first_traffic_source_name) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS first_traffic_source_name,
  LAST_VALUE(first_traffic_source_source) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS first_traffic_source_source,
  LAST_VALUE(active_users_past_1_7_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS active_users_past_1_7_day,
  LAST_VALUE(active_users_past_8_14_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS active_users_past_8_14_day,
  LAST_VALUE(purchases_past_1_7_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS purchases_past_1_7_day,
  LAST_VALUE(purchases_past_8_14_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS purchases_past_8_14_day,
  LAST_VALUE(visits_past_1_7_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS visits_past_1_7_day,
  LAST_VALUE(visits_past_8_14_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS visits_past_8_14_day,
  LAST_VALUE(view_items_past_1_7_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS view_items_past_1_7_day,
  LAST_VALUE(view_items_past_8_14_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS view_items_past_8_14_day,
  LAST_VALUE(add_to_carts_past_1_7_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS add_to_carts_past_1_7_day,
  LAST_VALUE(add_to_carts_past_8_14_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS add_to_carts_past_8_14_day,
  LAST_VALUE(checkouts_past_1_7_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS checkouts_past_1_7_day,
  LAST_VALUE(checkouts_past_8_14_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS checkouts_past_8_14_day,
  LAST_VALUE(ltv_revenue_past_1_7_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS ltv_revenue_past_1_7_day,
  LAST_VALUE(ltv_revenue_past_7_15_day) OVER(PARTITION BY user_pseudo_id ORDER BY feature_date DESC) AS ltv_revenue_past_7_15_day
  FROM `{{project_id}}.{{dataset}}.audience_segmentation_training_full_dataset`
);

-- Create a view v_audience_segmentation_training_15 that selects the latest values for each feature from the audience_segmentation_training_full_dataset table.
-- This view is used by the Vertex AI pipeline to train the Audience Segmentation model.
CREATE OR REPLACE VIEW `{{project_id}}.{{dataset}}.v_audience_segmentation_training_15`
(processed_timestamp,
  data_split,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_model_name,
  device_os_version,
  geo_country,
  geo_region,
  geo_city,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  active_users_past_1_7_day,
  active_users_past_8_14_day,
  purchases_past_1_7_day,
  purchases_past_8_14_day,
  visits_past_1_7_day,
  visits_past_8_14_day,
  view_items_past_1_7_day,
  view_items_past_8_14_day,
  add_to_carts_past_1_7_day,
  add_to_carts_past_8_14_day,
  checkouts_past_1_7_day,
  checkouts_past_8_14_day,
  ltv_revenue_past_1_7_day,
  ltv_revenue_past_7_15_day)
OPTIONS(
  --expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL {{expiration_duration_hours}} HOUR),
  friendly_name="v_audience_segmentation_training_15",
  description="View Purchase Propensity Training dataset using 15 days back to predict 15 days ahead. View expires after 48h and should run daily.",
  labels=[("org_unit", "development")]
) AS 

SELECT DISTINCT
  processed_timestamp,
  data_split,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_model_name,
  device_os_version,
  geo_country,
  geo_region,
  geo_city,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  active_users_past_1_7_day,
  active_users_past_8_14_day,
  purchases_past_1_7_day,
  purchases_past_8_14_day,
  visits_past_1_7_day,
  visits_past_8_14_day,
  view_items_past_1_7_day,
  view_items_past_8_14_day,
  add_to_carts_past_1_7_day,
  add_to_carts_past_8_14_day,
  checkouts_past_1_7_day,
  checkouts_past_8_14_day,
  ltv_revenue_past_1_7_day,
  ltv_revenue_past_7_15_day
FROM (
  SELECT DISTINCT
  processed_timestamp,
  data_split,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_model_name,
  device_os_version,
  geo_country,
  geo_region,
  geo_city,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  active_users_past_1_7_day,
  active_users_past_8_14_day,
  purchases_past_1_7_day,
  purchases_past_8_14_day,
  visits_past_1_7_day,
  visits_past_8_14_day,
  view_items_past_1_7_day,
  view_items_past_8_14_day,
  add_to_carts_past_1_7_day,
  add_to_carts_past_8_14_day,
  checkouts_past_1_7_day,
  checkouts_past_8_14_day,
  ltv_revenue_past_1_7_day,
  ltv_revenue_past_7_15_day,
  ROW_NUMBER() OVER (PARTITION BY data_split ORDER BY RAND()) AS rn,
  ROW_NUMBER() OVER (PARTITION BY user_pseudo_id, data_split ORDER BY feature_date DESC) AS user_row_order
  FROM
    `{{project_id}}.{{dataset}}.audience_segmentation_training_15`)
WHERE
  user_row_order = 1 AND
  -- samples_per_split variable determines the number of samples to be included in each data split (TRAIN, VALIDATE, TEST).
  rn <= {{samples_per_split}};