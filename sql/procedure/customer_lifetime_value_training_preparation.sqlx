-- Copyright 2023 Google LLC
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

DECLARE custom_start_date DATE DEFAULT NULL;
DECLARE custom_end_date DATE DEFAULT NULL;
DECLARE max_date DATE;
DECLARE min_date DATE;

# custom_start_date: The start date of the data to be used for training.
# custom_end_date: The end date of the data to be used for training.
SET custom_start_date = PARSE_DATE("%Y-%m-%d", {{custom_start_date}});
SET custom_end_date = PARSE_DATE("%Y-%m-%d", {{custom_end_date}});

# max_date: The maximum date of the data that is available for training.
# min_date: The minimum date of the data that is available for training.
SET max_date = (SELECT DATE_SUB(MAX(event_date), INTERVAL 180 DAY) FROM `{{mds_project_id}}.{{mds_dataset}}.event`); 
SET min_date = (SELECT DATE_ADD(MIN(event_date), INTERVAL 180 DAY) FROM `{{mds_project_id}}.{{mds_dataset}}.event`); 

# The procedure first checks if the custom_start_date and custom_end_date parameters are valid. 
# If either parameter is not valid, the procedure sets the corresponding date to the maximum or
# minimum date of the available data.
IF (custom_start_date IS NOT NULL OR custom_start_date >= min_date OR custom_start_date <= max_date) 
   AND custom_start_date < custom_end_date THEN
  SET max_date = custom_start_date;
END IF;

IF (custom_end_date IS NOT NULL OR custom_end_date <= max_date OR custom_end_date >= min_date) 
   AND custom_end_date > custom_start_date THEN
  SET min_date = custom_end_date;
END IF;

# The resulting training_preparation_ud table contains a consolidated view of user-specific features, 
# with the maximum values calculated over the specified time range for each user. 
# This table can be used as input for further data preparation and modeling tasks.
CREATE OR REPLACE TEMP TABLE training_preparation_ud as (
  SELECT DISTINCT
    UD.user_pseudo_id,
    MAX(UD.user_id) OVER(user_dimensions_window) AS user_id,
    UD.feature_date,
    MAX(UD.user_ltv_revenue) OVER(user_dimensions_window) AS user_ltv_revenue,
    MAX(UD.device_category) OVER(user_dimensions_window) AS device_category,
    MAX(UD.device_mobile_brand_name) OVER(user_dimensions_window) AS device_mobile_brand_name,
    MAX(UD.device_mobile_model_name) OVER(user_dimensions_window) AS device_mobile_model_name,
    MAX(UD.device_os) OVER(user_dimensions_window) AS device_os,
    MAX(UD.device_language) OVER(user_dimensions_window) AS device_language,
    MAX(UD.device_web_browser) OVER(user_dimensions_window) AS device_web_browser,
    MAX(UD.geo_sub_continent) OVER(user_dimensions_window) AS geo_sub_continent,
    MAX(UD.geo_country) OVER(user_dimensions_window) AS geo_country,
    MAX(UD.geo_region) OVER(user_dimensions_window) AS geo_region,
    MAX(UD.geo_city) OVER(user_dimensions_window) AS geo_city,
    MAX(UD.geo_metro) OVER(user_dimensions_window) AS geo_metro,
    MAX(UD.last_traffic_source_medium) OVER(user_dimensions_window) AS last_traffic_source_medium,
    MAX(UD.last_traffic_source_name) OVER(user_dimensions_window) AS last_traffic_source_name,
    MAX(UD.last_traffic_source_source) OVER(user_dimensions_window) AS last_traffic_source_source,
    MAX(UD.first_traffic_source_medium) OVER(user_dimensions_window) AS first_traffic_source_medium,
    MAX(UD.first_traffic_source_name) OVER(user_dimensions_window) AS first_traffic_source_name,
    MAX(UD.first_traffic_source_source) OVER(user_dimensions_window) AS first_traffic_source_source,
    MAX(UD.has_signed_in_with_user_id) OVER(user_dimensions_window) AS has_signed_in_with_user_id,
FROM
  `{{feature_store_project_id}}.{{feature_store_dataset}}.user_lifetime_dimensions` UD
WHERE
  -- In the future consider `feature_date BETWEEN start_date AND end_date`, to process multiple days. Modify Partition BY
  UD.feature_date BETWEEN GREATEST(start_date, min_date) AND LEAST(end_date, max_date)
WINDOW 
  user_dimensions_window AS (PARTITION BY UD.user_pseudo_id, UD.feature_date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)
);

# The resulting training_preparation_uwm table contains a consolidated view of user-specific features, 
# with the maximum values calculated over the specified time range for each user. 
# This table can be used as input for further data preparation and modeling tasks.
CREATE OR REPLACE TEMP TABLE training_preparation_uwm as (
  SELECT DISTINCT
    UWM.user_pseudo_id,
    UWM.feature_date,
    MAX(UWM.active_users_past_1_30_day) OVER(user_rolling_window) AS active_users_past_1_30_day,
    MAX(UWM.active_users_past_30_60_day) OVER(user_rolling_window) AS active_users_past_30_60_day,
    MAX(UWM.active_users_past_60_90_day) OVER(user_rolling_window) AS active_users_past_60_90_day,
    MAX(UWM.active_users_past_90_120_day) OVER(user_rolling_window) AS active_users_past_90_120_day,
    MAX(UWM.active_users_past_120_150_day) OVER(user_rolling_window) AS active_users_past_120_150_day,
    MAX(UWM.active_users_past_150_180_day) OVER(user_rolling_window) AS active_users_past_150_180_day,
    MAX(UWM.purchases_past_1_30_day) OVER(user_rolling_window) AS purchases_past_1_30_day,
    MAX(UWM.purchases_past_30_60_day) OVER(user_rolling_window) AS purchases_past_30_60_day,
    MAX(UWM.purchases_past_60_90_day) OVER(user_rolling_window) AS purchases_past_60_90_day,
    MAX(UWM.purchases_past_90_120_day) OVER(user_rolling_window) AS purchases_past_90_120_day,
    MAX(UWM.purchases_past_120_150_day) OVER(user_rolling_window) AS purchases_past_120_150_day,
    MAX(UWM.purchases_past_150_180_day) OVER(user_rolling_window) AS purchases_past_150_180_day,
    MAX(UWM.visits_past_1_30_day) OVER(user_rolling_window) AS visits_past_1_30_day,
    MAX(UWM.visits_past_30_60_day) OVER(user_rolling_window) AS visits_past_30_60_day,
    MAX(UWM.visits_past_60_90_day) OVER(user_rolling_window) AS visits_past_60_90_day,
    MAX(UWM.visits_past_90_120_day) OVER(user_rolling_window) AS visits_past_90_120_day,
    MAX(UWM.visits_past_120_150_day) OVER(user_rolling_window) AS visits_past_120_150_day,
    MAX(UWM.visits_past_150_180_day) OVER(user_rolling_window) AS visits_past_150_180_day,
    MAX(UWM.view_items_past_1_30_day) OVER(user_rolling_window) AS view_items_past_1_30_day,
    MAX(UWM.view_items_past_30_60_day) OVER(user_rolling_window) AS view_items_past_30_60_day,
    MAX(UWM.view_items_past_60_90_day) OVER(user_rolling_window) AS view_items_past_60_90_day,
    MAX(UWM.view_items_past_90_120_day) OVER(user_rolling_window) AS view_items_past_90_120_day,
    MAX(UWM.view_items_past_120_150_day) OVER(user_rolling_window) AS view_items_past_120_150_day,
    MAX(UWM.view_items_past_150_180_day) OVER(user_rolling_window) AS view_items_past_150_180_day,
    MAX(UWM.add_to_carts_past_1_30_day) OVER(user_rolling_window) AS add_to_carts_past_1_30_day,
    MAX(UWM.add_to_carts_past_30_60_day) OVER(user_rolling_window) AS add_to_carts_past_30_60_day,
    MAX(UWM.add_to_carts_past_60_90_day) OVER(user_rolling_window) AS add_to_carts_past_60_90_day,
    MAX(UWM.add_to_carts_past_90_120_day) OVER(user_rolling_window) AS add_to_carts_past_90_120_day,
    MAX(UWM.add_to_carts_past_120_150_day) OVER(user_rolling_window) AS add_to_carts_past_120_150_day,
    MAX(UWM.add_to_carts_past_150_180_day) OVER(user_rolling_window) AS add_to_carts_past_150_180_day,
    MAX(UWM.checkouts_past_1_30_day) OVER(user_rolling_window) AS checkouts_past_1_30_day,
    MAX(UWM.checkouts_past_30_60_day) OVER(user_rolling_window) AS checkouts_past_30_60_day,
    MAX(UWM.checkouts_past_60_90_day) OVER(user_rolling_window) AS checkouts_past_60_90_day,
    MAX(UWM.checkouts_past_90_120_day) OVER(user_rolling_window) AS checkouts_past_90_120_day,
    MAX(UWM.checkouts_past_120_150_day) OVER(user_rolling_window) AS checkouts_past_120_150_day,
    MAX(UWM.checkouts_past_150_180_day) OVER(user_rolling_window) AS checkouts_past_150_180_day,
FROM
  `{{feature_store_project_id}}.{{feature_store_dataset}}.user_rolling_window_lifetime_metrics` UWM
WHERE
  -- In the future consider `feature_date BETWEEN start_date AND end_date`, to process multiple days. Modify Partition BY
  UWM.feature_date BETWEEN GREATEST(start_date, min_date) AND LEAST(end_date, max_date)
WINDOW 
  user_rolling_window AS (PARTITION BY UWM.user_pseudo_id, UWM.feature_date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)
);


# The resulting training_preparation_label table contains a consolidated view of user-specific labels, 
# with the maximum values calculated over the specified time range for each user. 
# This table can be used as input for further data preparation and modeling tasks.
CREATE OR REPLACE TEMP TABLE training_preparation_label as (
  SELECT DISTINCT
    LABEL.user_pseudo_id,
    LABEL.feature_date,
    MAX(LABEL.pltv_revenue_30_days) OVER(customer_lifetime_value_window) AS pltv_revenue_30_days,
    MAX(LABEL.pltv_revenue_90_days) OVER(customer_lifetime_value_window) AS pltv_revenue_90_days,
    MAX(LABEL.pltv_revenue_180_days) OVER(customer_lifetime_value_window) AS pltv_revenue_180_days
FROM
  `{{feature_store_project_id}}.{{feature_store_dataset}}.customer_lifetime_value_label` LABEL
WHERE
  -- Define the training subset interval
  LABEL.feature_date BETWEEN GREATEST(start_date, min_date) AND LEAST(end_date, max_date)
WINDOW 
  customer_lifetime_value_window AS (PARTITION BY LABEL.user_pseudo_id, LABEL.feature_date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)
);

# The resulting training_preparation table contains a consolidated view of user-specific features and labels,
# to be used as input for further data preparation and modeling tasks.
CREATE OR REPLACE TEMP TABLE training_preparation as (
  SELECT DISTINCT
    UD.user_pseudo_id,
    UD.user_id,
    UD.feature_date,
    UD.device_category,
    UD.device_mobile_brand_name,
    UD.device_mobile_model_name,
    UD.device_os,
    UD.device_language,
    UD.device_web_browser,
    UD.geo_sub_continent,
    UD.geo_country,
    UD.geo_region,
    UD.geo_city,
    UD.geo_metro,
    UD.last_traffic_source_medium,
    UD.last_traffic_source_name,
    UD.last_traffic_source_source,
    UD.first_traffic_source_medium,
    UD.first_traffic_source_name,
    UD.first_traffic_source_source,
    UD.has_signed_in_with_user_id,
    UWM.active_users_past_1_30_day,
    UWM.active_users_past_30_60_day,
    UWM.active_users_past_60_90_day,
    UWM.active_users_past_90_120_day,
    UWM.active_users_past_120_150_day,
    UWM.active_users_past_150_180_day,
    UWM.purchases_past_1_30_day,
    UWM.purchases_past_30_60_day,
    UWM.purchases_past_60_90_day,
    UWM.purchases_past_90_120_day,
    UWM.purchases_past_120_150_day,
    UWM.purchases_past_150_180_day,
    UWM.visits_past_1_30_day,
    UWM.visits_past_30_60_day,
    UWM.visits_past_60_90_day,
    UWM.visits_past_90_120_day,
    UWM.visits_past_120_150_day,
    UWM.visits_past_150_180_day,
    UWM.view_items_past_1_30_day,
    UWM.view_items_past_30_60_day,
    UWM.view_items_past_60_90_day,
    UWM.view_items_past_90_120_day,
    UWM.view_items_past_120_150_day,
    UWM.view_items_past_150_180_day,
    UWM.add_to_carts_past_1_30_day,
    UWM.add_to_carts_past_30_60_day,
    UWM.add_to_carts_past_60_90_day,
    UWM.add_to_carts_past_90_120_day,
    UWM.add_to_carts_past_120_150_day,
    UWM.add_to_carts_past_150_180_day,
    UWM.checkouts_past_1_30_day,
    UWM.checkouts_past_30_60_day,
    UWM.checkouts_past_60_90_day,
    UWM.checkouts_past_90_120_day,
    UWM.checkouts_past_120_150_day,
    UWM.checkouts_past_150_180_day,
    LABEL.pltv_revenue_30_days,
    LABEL.pltv_revenue_90_days,
    LABEL.pltv_revenue_180_days
FROM
  training_preparation_ud UD
INNER JOIN
  training_preparation_uwm UWM
ON
  UWM.user_pseudo_id = UD.user_pseudo_id
  AND UWM.feature_date = UD.feature_date
INNER JOIN
  training_preparation_label LABEL
ON
  LABEL.user_pseudo_id = UD.user_pseudo_id
  AND LABEL.feature_date = UD.feature_date
);

# The DataForTargetTable table adds the data_split column which is used to identify which rows will
# be used in different splits (TRAIN, VALIDATE, TEST).
CREATE OR REPLACE TEMP TABLE DataForTargetTable AS(
  SELECT DISTINCT
  CASE 
    WHEN (ABS(MOD(FARM_FINGERPRINT(user_pseudo_id), 10)) BETWEEN 0 AND train_split_end_number) THEN "TRAIN" 
    WHEN (ABS(MOD(FARM_FINGERPRINT(user_pseudo_id), 10)) BETWEEN train_split_end_number AND validation_split_end_number) THEN "VALIDATE" 
    WHEN (ABS(MOD(FARM_FINGERPRINT(user_pseudo_id), 10)) BETWEEN validation_split_end_number AND 9) THEN "TEST"
  END as data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_30_days,
  pltv_revenue_90_days,
  pltv_revenue_180_days
  FROM training_preparation);

# Fully overwrites the table which serves as basis for further down specific transformations and filtering.
CREATE OR REPLACE TABLE `{{project_id}}.{{dataset}}.{{insert_table}}` AS
SELECT DISTINCT * FROM DataForTargetTable
WHERE data_split IS NOT NULL;

# Prepares the non-duplocated features and labels for the CLTV model looking back 180 days to predict 30 days.
CREATE OR REPLACE TABLE `{{project_id}}.{{dataset}}.customer_lifetime_value_training_180_30` AS(
  SELECT DISTINCT
  CURRENT_TIMESTAMP() AS processed_timestamp, 
  data_split,
  feature_date,
  user_pseudo_id,
  LAST_VALUE(user_id) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS user_id,
  LAST_VALUE(device_category) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_category,
  LAST_VALUE(device_mobile_brand_name) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_mobile_brand_name,
  LAST_VALUE(device_mobile_model_name) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_mobile_model_name,
  LAST_VALUE(device_os) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_os,
  LAST_VALUE(device_language) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_language,
  LAST_VALUE(device_web_browser) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_web_browser,
  LAST_VALUE(geo_sub_continent) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_sub_continent,
  LAST_VALUE(geo_country) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_country,
  LAST_VALUE(geo_region) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_region,
  LAST_VALUE(geo_city) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_city,
  LAST_VALUE(geo_metro) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_metro,
  LAST_VALUE(last_traffic_source_medium) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS last_traffic_source_medium,
  LAST_VALUE(last_traffic_source_name) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS last_traffic_source_name,
  LAST_VALUE(last_traffic_source_source) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS last_traffic_source_source,
  LAST_VALUE(first_traffic_source_medium) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS first_traffic_source_medium,
  LAST_VALUE(first_traffic_source_name) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS  first_traffic_source_name,
  LAST_VALUE(first_traffic_source_source) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS  first_traffic_source_source,
  LAST_VALUE(has_signed_in_with_user_id) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS has_signed_in_with_user_id,
  LAST_VALUE(active_users_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_1_30_day,
  LAST_VALUE(active_users_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_30_60_day,
  LAST_VALUE(active_users_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_60_90_day,
  LAST_VALUE(active_users_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_90_120_day,
  LAST_VALUE(active_users_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_120_150_day,
  LAST_VALUE(active_users_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_150_180_day,
  LAST_VALUE(purchases_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_1_30_day,
  LAST_VALUE(purchases_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_30_60_day,
  LAST_VALUE(purchases_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_60_90_day,
  LAST_VALUE(purchases_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_90_120_day,
  LAST_VALUE(purchases_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_120_150_day,
  LAST_VALUE(purchases_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_150_180_day,
  LAST_VALUE(visits_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_1_30_day,
  LAST_VALUE(visits_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_30_60_day,
  LAST_VALUE(visits_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_60_90_day,
  LAST_VALUE(visits_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_90_120_day,
  LAST_VALUE(visits_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_120_150_day,
  LAST_VALUE(visits_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_150_180_day,
  LAST_VALUE(view_items_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_1_30_day,
  LAST_VALUE(view_items_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_30_60_day,
  LAST_VALUE(view_items_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_60_90_day,
  LAST_VALUE(view_items_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_90_120_day,
  LAST_VALUE(view_items_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_120_150_day,
  LAST_VALUE(view_items_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_150_180_day,
  LAST_VALUE(add_to_carts_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_1_30_day,
  LAST_VALUE(add_to_carts_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_30_60_day,
  LAST_VALUE(add_to_carts_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_60_90_day,
  LAST_VALUE(add_to_carts_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_90_120_day,
  LAST_VALUE(add_to_carts_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_120_150_day,
  LAST_VALUE(add_to_carts_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_150_180_day,
  LAST_VALUE(checkouts_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_1_30_day,
  LAST_VALUE(checkouts_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_30_60_day,
  LAST_VALUE(checkouts_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_60_90_day,
  LAST_VALUE(checkouts_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_90_120_day,
  LAST_VALUE(checkouts_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_120_150_day,
  LAST_VALUE(checkouts_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_150_180_day,
  LAST_VALUE(pltv_revenue_30_days) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS pltv_revenue_30_days
  FROM `{{project_id}}.{{dataset}}.{{insert_table}}`
  WHERE pltv_revenue_30_days > 0.0
);

# Prepares the non-duplocated features and labels for the CLTV model looking back 180 days to predict 90 days.
CREATE OR REPLACE TABLE `{{project_id}}.{{dataset}}.customer_lifetime_value_training_180_90` AS(
  SELECT DISTINCT
  CURRENT_TIMESTAMP() AS processed_timestamp,
  data_split,
  feature_date,
  user_pseudo_id,
  LAST_VALUE(user_id) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS user_id,
  LAST_VALUE(device_category) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_category,
  LAST_VALUE(device_mobile_brand_name) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_mobile_brand_name,
  LAST_VALUE(device_mobile_model_name) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_mobile_model_name,
  LAST_VALUE(device_os) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_os,
  LAST_VALUE(device_language) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_language,
  LAST_VALUE(device_web_browser) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_web_browser,
  LAST_VALUE(geo_sub_continent) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_sub_continent,
  LAST_VALUE(geo_country) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_country,
  LAST_VALUE(geo_region) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_region,
  LAST_VALUE(geo_city) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_city,
  LAST_VALUE(geo_metro) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_metro,
  LAST_VALUE(last_traffic_source_medium) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS last_traffic_source_medium,
  LAST_VALUE(last_traffic_source_name) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS last_traffic_source_name,
  LAST_VALUE(last_traffic_source_source) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS last_traffic_source_source,
  LAST_VALUE(first_traffic_source_medium) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS first_traffic_source_medium,
  LAST_VALUE(first_traffic_source_name) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS  first_traffic_source_name,
  LAST_VALUE(first_traffic_source_source) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS  first_traffic_source_source,
  LAST_VALUE(has_signed_in_with_user_id) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS has_signed_in_with_user_id,
  LAST_VALUE(active_users_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_1_30_day,
  LAST_VALUE(active_users_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_30_60_day,
  LAST_VALUE(active_users_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_60_90_day,
  LAST_VALUE(active_users_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_90_120_day,
  LAST_VALUE(active_users_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_120_150_day,
  LAST_VALUE(active_users_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_150_180_day,
  LAST_VALUE(purchases_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_1_30_day,
  LAST_VALUE(purchases_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_30_60_day,
  LAST_VALUE(purchases_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_60_90_day,
  LAST_VALUE(purchases_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_90_120_day,
  LAST_VALUE(purchases_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_120_150_day,
  LAST_VALUE(purchases_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_150_180_day,
  LAST_VALUE(visits_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_1_30_day,
  LAST_VALUE(visits_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_30_60_day,
  LAST_VALUE(visits_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_60_90_day,
  LAST_VALUE(visits_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_90_120_day,
  LAST_VALUE(visits_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_120_150_day,
  LAST_VALUE(visits_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_150_180_day,
  LAST_VALUE(view_items_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_1_30_day,
  LAST_VALUE(view_items_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_30_60_day,
  LAST_VALUE(view_items_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_60_90_day,
  LAST_VALUE(view_items_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_90_120_day,
  LAST_VALUE(view_items_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_120_150_day,
  LAST_VALUE(view_items_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_150_180_day,
  LAST_VALUE(add_to_carts_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_1_30_day,
  LAST_VALUE(add_to_carts_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_30_60_day,
  LAST_VALUE(add_to_carts_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_60_90_day,
  LAST_VALUE(add_to_carts_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_90_120_day,
  LAST_VALUE(add_to_carts_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_120_150_day,
  LAST_VALUE(add_to_carts_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_150_180_day,
  LAST_VALUE(checkouts_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_1_30_day,
  LAST_VALUE(checkouts_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_30_60_day,
  LAST_VALUE(checkouts_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_60_90_day,
  LAST_VALUE(checkouts_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_90_120_day,
  LAST_VALUE(checkouts_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_120_150_day,
  LAST_VALUE(checkouts_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_150_180_day,
  LAST_VALUE(pltv_revenue_90_days) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS pltv_revenue_90_days
  FROM `{{project_id}}.{{dataset}}.{{insert_table}}`
  WHERE pltv_revenue_90_days > 0.0
);

# # Prepares the non-duplocated features and labels for the CLTV model looking back 180 days to predict 180 days.
CREATE OR REPLACE TABLE `{{project_id}}.{{dataset}}.customer_lifetime_value_training_180_180` AS(
  SELECT DISTINCT
  CURRENT_TIMESTAMP() AS processed_timestamp,
  data_split,
  feature_date,
  user_pseudo_id,
  LAST_VALUE(user_id) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS user_id,
  LAST_VALUE(device_category) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_category,
  LAST_VALUE(device_mobile_brand_name) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_mobile_brand_name,
  LAST_VALUE(device_mobile_model_name) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_mobile_model_name,
  LAST_VALUE(device_os) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_os,
  LAST_VALUE(device_language) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_language,
  LAST_VALUE(device_web_browser) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS device_web_browser,
  LAST_VALUE(geo_sub_continent) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_sub_continent,
  LAST_VALUE(geo_country) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_country,
  LAST_VALUE(geo_region) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_region,
  LAST_VALUE(geo_city) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_city,
  LAST_VALUE(geo_metro) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS geo_metro,
  LAST_VALUE(last_traffic_source_medium) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS last_traffic_source_medium,
  LAST_VALUE(last_traffic_source_name) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS last_traffic_source_name,
  LAST_VALUE(last_traffic_source_source) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS last_traffic_source_source,
  LAST_VALUE(first_traffic_source_medium) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS first_traffic_source_medium,
  LAST_VALUE(first_traffic_source_name) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS  first_traffic_source_name,
  LAST_VALUE(first_traffic_source_source) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS  first_traffic_source_source,
  LAST_VALUE(has_signed_in_with_user_id) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS has_signed_in_with_user_id,
  LAST_VALUE(active_users_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_1_30_day,
  LAST_VALUE(active_users_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_30_60_day,
  LAST_VALUE(active_users_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_60_90_day,
  LAST_VALUE(active_users_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_90_120_day,
  LAST_VALUE(active_users_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_120_150_day,
  LAST_VALUE(active_users_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS active_users_past_150_180_day,
  LAST_VALUE(purchases_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_1_30_day,
  LAST_VALUE(purchases_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_30_60_day,
  LAST_VALUE(purchases_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_60_90_day,
  LAST_VALUE(purchases_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_90_120_day,
  LAST_VALUE(purchases_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_120_150_day,
  LAST_VALUE(purchases_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS purchases_past_150_180_day,
  LAST_VALUE(visits_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_1_30_day,
  LAST_VALUE(visits_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_30_60_day,
  LAST_VALUE(visits_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_60_90_day,
  LAST_VALUE(visits_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_90_120_day,
  LAST_VALUE(visits_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_120_150_day,
  LAST_VALUE(visits_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS visits_past_150_180_day,
  LAST_VALUE(view_items_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_1_30_day,
  LAST_VALUE(view_items_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_30_60_day,
  LAST_VALUE(view_items_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_60_90_day,
  LAST_VALUE(view_items_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_90_120_day,
  LAST_VALUE(view_items_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_120_150_day,
  LAST_VALUE(view_items_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS view_items_past_150_180_day,
  LAST_VALUE(add_to_carts_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_1_30_day,
  LAST_VALUE(add_to_carts_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_30_60_day,
  LAST_VALUE(add_to_carts_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_60_90_day,
  LAST_VALUE(add_to_carts_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_90_120_day,
  LAST_VALUE(add_to_carts_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_120_150_day,
  LAST_VALUE(add_to_carts_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS add_to_carts_past_150_180_day,
  LAST_VALUE(checkouts_past_1_30_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_1_30_day,
  LAST_VALUE(checkouts_past_30_60_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_30_60_day,
  LAST_VALUE(checkouts_past_60_90_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_60_90_day,
  LAST_VALUE(checkouts_past_90_120_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_90_120_day,
  LAST_VALUE(checkouts_past_120_150_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_120_150_day,
  LAST_VALUE(checkouts_past_150_180_day) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS checkouts_past_150_180_day,
  LAST_VALUE(pltv_revenue_180_days ) OVER(PARTITION BY user_pseudo_id, feature_date ORDER BY feature_date DESC) AS pltv_revenue_180_days
  FROM `{{project_id}}.{{dataset}}.{{insert_table}}`
  WHERE pltv_revenue_180_days > 0.0
);

# Creates the final view containing input data for the CLTV model looking back 180 days to predict 30 days.
CREATE OR REPLACE VIEW `{{project_id}}.{{dataset}}.v_customer_lifetime_value_training_180_30`
(processed_timestamp,
  data_split,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_30_days)
OPTIONS(
  --expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL {{expiration_duration_hours}} HOUR),
  friendly_name="v_customer_lifetime_value_training_180_30",
  description="View Purchase Propensity Training dataset using 15 days back to predict 15 days ahead. View expires after 48h and should run daily.",
  labels=[("org_unit", "development")]
) AS 
SELECT DISTINCT
 * EXCEPT(feature_date, row_order_peruser_persplit) 
FROM (
SELECT DISTINCT
  processed_timestamp, 
  data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  #Now, I want to skip rows per user, per split every 30 days.
  ROW_NUMBER() OVER (PARTITION BY user_pseudo_id, data_split ORDER BY feature_date ASC) AS row_order_peruser_persplit,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_30_days
FROM(
SELECT DISTINCT
  processed_timestamp, 
  data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_30_days,
  ROW_NUMBER() OVER (PARTITION BY user_pseudo_id, feature_date, data_split ORDER BY feature_date DESC) AS row_order_peruser_perday_persplit
  FROM `{{project_id}}.{{dataset}}.customer_lifetime_value_training_180_30`
)
WHERE
  row_order_peruser_perday_persplit = 1
)
WHERE
  #Skipping windows of 30 days, which is the future window size.
  MOD(row_order_peruser_persplit-1, 30) = 0;


# Creates the final view containing input data for the CLTV model looking back 180 days to predict 90 days.
CREATE OR REPLACE VIEW `{{project_id}}.{{dataset}}.v_customer_lifetime_value_training_180_90`
(processed_timestamp, 
  data_split,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_90_days)
OPTIONS(
  --expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL {{expiration_duration_hours}} HOUR),
  friendly_name="v_customer_lifetime_value_training_180_90",
  description="View Purchase Propensity Training dataset using 15 days back to predict 7 days ahead. View expires after 48h and should run daily.",
  labels=[("org_unit", "development")]
) AS 
SELECT DISTINCT
 * EXCEPT(feature_date, row_order_peruser_persplit) 
FROM (
SELECT DISTINCT
  processed_timestamp, 
  data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  #Now, I want to skip rows per user, per split every 15 days.
  ROW_NUMBER() OVER (PARTITION BY user_pseudo_id, data_split ORDER BY feature_date ASC) AS row_order_peruser_persplit,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_90_days
FROM(
SELECT DISTINCT
  processed_timestamp, 
  data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_90_days,
  # Number of rows per user, per day, per split. Only one row per user, per day, per slip.
  ROW_NUMBER() OVER (PARTITION BY user_pseudo_id, feature_date, data_split ORDER BY feature_date DESC) AS row_order_peruser_perday_persplit
  FROM `{{project_id}}.{{dataset}}.customer_lifetime_value_training_180_90`
)
WHERE
  row_order_peruser_perday_persplit = 1
)
WHERE
  #Skipping windows of 90 days, which is the future window size.
  MOD(row_order_peruser_persplit-1, 90) = 0;


# Creates the final view containing input data for the CLTV model looking back 180 days to predict 180 days.
  CREATE OR REPLACE VIEW `{{project_id}}.{{dataset}}.v_customer_lifetime_value_training_180_180`
(processed_timestamp, 
  data_split,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_180_days)
OPTIONS(
  --expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL {{expiration_duration_hours}} HOUR),
  friendly_name="v_customer_lifetime_value_training_180_180",
  description="View Purchase Propensity Training dataset using 30 days back to predict 15 days ahead. View expires after 48h and should run daily.",
  labels=[("org_unit", "development")]
) AS
SELECT DISTINCT
 * EXCEPT(feature_date, row_order_peruser_persplit) 
FROM ( 
SELECT DISTINCT
  processed_timestamp, 
  data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  #Now, I want to skip rows per user, per split every 15 days.
  ROW_NUMBER() OVER (PARTITION BY user_pseudo_id, data_split ORDER BY feature_date ASC) AS row_order_peruser_persplit,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_180_days
FROM(
SELECT DISTINCT
  processed_timestamp, 
  data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_180_days,
  # Number of rows per user, per day, per split. Only one row per user, per day, per slip.
  ROW_NUMBER() OVER (PARTITION BY user_pseudo_id, feature_date, data_split ORDER BY feature_date DESC) AS row_order_peruser_perday_persplit
  FROM `{{project_id}}.{{dataset}}.customer_lifetime_value_training_180_180`
)
WHERE
  row_order_peruser_perday_persplit = 1
)
WHERE
  #Skipping windows of 30 days, which is the future window size.
  MOD(row_order_peruser_persplit-1, 30) = 0;


# Creates the final view containing input data for the CLTV model looking back 180 days to predict 30 days.
# Consider only the last windows per user. So that we can use only the most recent interactions of users.
CREATE OR REPLACE VIEW `{{project_id}}.{{dataset}}.v_customer_lifetime_value_training_180_30_last_window`
(processed_timestamp,
  data_split,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_30_days)
OPTIONS(
  --expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL {{expiration_duration_hours}} HOUR),
  friendly_name="v_customer_lifetime_value_training_180_30",
  description="View Purchase Propensity Training dataset using 15 days back to predict 15 days ahead. View expires after 48h and should run daily.",
  labels=[("org_unit", "development")]
) AS 
SELECT DISTINCT
  processed_timestamp, 
  data_split,
  --feature_date,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_30_days
FROM(
SELECT DISTINCT
  processed_timestamp, 
  data_split,
  feature_date,
  user_pseudo_id,
  user_id,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_30_days,
  ROW_NUMBER() OVER (PARTITION BY user_pseudo_id, data_split ORDER BY feature_date DESC) AS user_row_order
  FROM `{{project_id}}.{{dataset}}.customer_lifetime_value_training_180_30`
)
WHERE
  user_row_order = 1;

# Creates the final view containing balanced input data for the CLTV model looking back 180 days to predict 30 days.
CREATE OR REPLACE VIEW `{{project_id}}.{{dataset}}.v_customer_lifetime_value_training_180_30_balanced`
(data_split,
  user_pseudo_id,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_30_days)
OPTIONS(
  --expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL {{expiration_duration_hours}} HOUR),
  friendly_name="v_customer_lifetime_value_training_180_30_balanced",
  description="View Purchase Propensity Training dataset using 15 days back to predict 15 days ahead. View expires after 48h and should run daily.",
  labels=[("org_unit", "development")]
) AS
SELECT DISTINCT 
  data_split,
  user_pseudo_id,
  device_category,
  device_mobile_brand_name,
  device_mobile_model_name,
  device_os,
  device_language,
  device_web_browser,
  geo_sub_continent,
  geo_country,
  geo_region,
  geo_city,
  geo_metro,
  last_traffic_source_medium,
  last_traffic_source_name,
  last_traffic_source_source,
  first_traffic_source_medium,
  first_traffic_source_name,
  first_traffic_source_source,
  has_signed_in_with_user_id,
  active_users_past_1_30_day,
  active_users_past_30_60_day,
  active_users_past_60_90_day,
  active_users_past_90_120_day,
  active_users_past_120_150_day,
  active_users_past_150_180_day,
  purchases_past_1_30_day,
  purchases_past_30_60_day,
  purchases_past_60_90_day,
  purchases_past_90_120_day,
  purchases_past_120_150_day,
  purchases_past_150_180_day,
  visits_past_1_30_day,
  visits_past_30_60_day,
  visits_past_60_90_day,
  visits_past_90_120_day,
  visits_past_120_150_day,
  visits_past_150_180_day,
  view_items_past_1_30_day,
  view_items_past_30_60_day,
  view_items_past_60_90_day,
  view_items_past_90_120_day,
  view_items_past_120_150_day,
  view_items_past_150_180_day,
  add_to_carts_past_1_30_day,
  add_to_carts_past_30_60_day,
  add_to_carts_past_60_90_day,
  add_to_carts_past_90_120_day,
  add_to_carts_past_120_150_day,
  add_to_carts_past_150_180_day,
  checkouts_past_1_30_day,
  checkouts_past_30_60_day,
  checkouts_past_60_90_day,
  checkouts_past_90_120_day,
  checkouts_past_120_150_day,
  checkouts_past_150_180_day,
  pltv_revenue_30_days
FROM
(
SELECT
* EXCEPT(rn) FROM (
SELECT
  *,
  ROW_NUMBER() OVER (PARTITION BY bucket ORDER BY RAND()) AS rn
FROM (
  SELECT
    *,
    CASE
      WHEN pltv_revenue_30_days < 50 THEN "bucket1"
      WHEN pltv_revenue_30_days BETWEEN 50 AND 100 THEN "bucket2"
      WHEN pltv_revenue_30_days BETWEEN 100 AND 200 THEN "bucket3"
      WHEN pltv_revenue_30_days BETWEEN 200 AND 300 THEN "bucket4"
      WHEN pltv_revenue_30_days BETWEEN 300 AND 400 THEN "bucket5"
      WHEN pltv_revenue_30_days BETWEEN 400 AND 500 THEN "bucket6" 
      WHEN pltv_revenue_30_days BETWEEN 500 AND 750 THEN "bucket7" 
      WHEN pltv_revenue_30_days BETWEEN 750 AND 1000 THEN "bucket8" 
      WHEN pltv_revenue_30_days BETWEEN 1000 AND 2000 THEN "bucket9" 
      WHEN pltv_revenue_30_days > 2000 THEN "bucket10" END as bucket
  FROM
    `{{project_id}}.{{dataset}}.v_customer_lifetime_value_training_180_30`)
)
WHERE
    rn <= 1000)
;
